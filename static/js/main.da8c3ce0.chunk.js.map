{"version":3,"sources":["components/Basic.js","components/Binary.js","components/Converter.js","App.js","reportWebVitals.js","index.js"],"names":["Basic","basic","useState","caches","setCaches","newlist","setNewlist","sum","setSum","op","setOp","equal","e","document","getElementById","value","length","sumx","map","x","equalize","toString","parseInt","i","input","sumnumber","isNaN","parseFloat","toFixed","split","addtoInput","theInput","target","join","style","visibility","className","cache","type","id","onChange","onKeyDown","keyCode","shiftKey","onInput","replace","autoComplete","onMouseUp","preventDefault","Binary","binaries","setBinaries","binary","setBinary","onMouseDown","newArr","console","log","Converter","converter","btn","setter","push","item","onClick","reverse","App","choosing","setChoosing","localData1","localStorage","getItem","JSON","parse","setBasic","advanced","setAdvanced","localData2","setConverter","useEffect","setItem","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.da8c3ce0.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Basic.css';\n\nfunction Basic({basic}) {\n    const [caches, setCaches] = useState([]);\n    const [newlist, setNewlist] = useState(\"\")\n    const [sum, setSum] = useState(\"\")\n    const [op, setOp] = useState(\"\")\n    \n \n\n    const equal = (e) => {\n        const theInput = document.getElementById(\"theInput\");\n        if (theInput.value.length > 0) {\n        let sumx = sum.map(x => +x);\n        var equalize = sum.toString().length >= 1 ? sumx[0] : parseInt(sum);\n        for (var i = 0; i <= op.length; i++) {\n            if(op[i]===\"+\") equalize += sumx[i+1];\n            if(op[i]===\"-\") equalize -= sumx[i+1];\n            if(op[i]===\"\\u00D7\") equalize *= sumx[i+1];\n            if(op[i]===\"\\u00F7\") equalize /= sumx[i+1];\n            if (op[i] === \"%\") equalize *= 0.01;\n        }\n        setCaches([...caches,\n            {\n                input: newlist,\n                sumnumber: !isNaN(equalize) ? (parseFloat(equalize.toFixed(4))) : \"Syntax Error\",\n            }\n        ])\n        setNewlist(!isNaN(equalize) ? equalize : \"Syntax Error\");\n        setSum(equalize.toString().split(/[%+\\u00F7\\u00D7-]/g));\n        setOp(\"\");\n        }\n    }\n    const enter = (e) => {\n        switch (e.keyCode) {\n            case 191: e.target.value += \"\\u00F7\"; break\n            case 56: if(e.shiftKey) e.target.value += \"\\u00D7\"; break\n            case 13: equal(); break\n            default: break\n        }\n    }\n    const addtoInput = (e) => {\n        const theInput = document.getElementById(\"theInput\");\n        theInput.value += e.target.value;\n        setNewlist(theInput.value);\n        setSum(theInput.value.split(/[%+\\u00F7\\u00D7-]/g));\n        setOp(theInput.value.split(/[0-9]|[.]/g).join(\"\").split(\"\"));\n    } \n\n    const clear = (e) => {\n        e.preventDefault();\n        setNewlist(\"\")\n        setSum(\"\")\n        setOp(\"\")\n    } \n\n    const OnlyNumericalValue = (e) => {\n        e.target.value = e.target.value.replace(/[^0-9%.+\\u00F7\\u00D7-]/g, '')\n    }\n    const inputHandlre = (e) => {\n        setNewlist(e.target.value);\n        setSum(e.target.value.split(/[%+\\u00F7\\u00D7-]/g))\n        setOp(e.target.value.split(/[0-9]|[.]/g).join(\"\").split(\"\"))\n    }\n    return (\n        <div style={{visibility: basic ? \"visible\" : \"hidden\"}}>\n            <div className=\"conter\" >\n            {\n            caches.map((cache, i) => (\n                <div key={i} className=\"conterInner\">\n                    <h1 >{cache.input}</h1> \n                    <h1 >=</h1> \n                    <h1 >{cache.sumnumber}</h1>\n                </div>\n            ))\n            }\n            </div>\n            <input type=\"text\" id=\"theInput\"\n            value={newlist}\n                onChange={inputHandlre}\n                onKeyDown={enter}\n                onInput={OnlyNumericalValue}\n                autoComplete=\"off\"\n            />\n\n            <div className=\"buttons\">\n            <button value=\"0\" className=\"n0\" onMouseUp={addtoInput}>0</button>\n            <button value=\"1\" className=\"n1\" onMouseUp={addtoInput}>1</button>\n            <button value=\"2\" className=\"n2\" onMouseUp={addtoInput}>2</button>\n            <button value=\"3\" className=\"n3\" onMouseUp={addtoInput}>3</button>\n            <button value=\"4\" className=\"n4\" onMouseUp={addtoInput}>4</button>\n            <button value=\"5\" className=\"n5\" onMouseUp={addtoInput}>5</button>\n            <button value=\"6\" className=\"n6\" onMouseUp={addtoInput}>6</button>\n            <button value=\"7\" className=\"n7\" onMouseUp={addtoInput}>7</button>\n            <button value=\"8\" className=\"n8\" onMouseUp={addtoInput}>8</button>\n            <button value=\"9\" className=\"n9\" onMouseUp={addtoInput}>9</button>    \n            \n            <button value=\".\" className=\"period\" onMouseUp={addtoInput}>.</button>\n            <button value=\"%\" className=\"percent\" onMouseUp={addtoInput}>%</button>\n            <button value={\"\\u00F7\"} className=\"divide\" onMouseUp={addtoInput}>/</button>\n            <button value={\"\\u00D7\"} className=\"multiply\" onMouseUp={addtoInput}>x</button>\n            <button value=\"-\"className=\"minus\" onMouseUp={addtoInput}>-</button>\n            <button value=\"+\" className=\"addition\" onMouseUp={addtoInput}>+</button>\n            <button className=\"equal\" onMouseUp={equal}>=</button>\n            <button className=\"clear\" onMouseUp={clear}>C</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Basic\n","import React, {useState} from 'react'\nimport \"./Converter.css\"\n\nfunction Binary({id, binaries, setBinaries}) {\n    const [binary, setBinary] = useState(false)\n\n    const btnHandlre = e => {\n        e.preventDefault()\n        let newArr = [...binaries]\n        setBinary(!binary)\n        if (!binary) {\n            newArr[id] = 1\n            setBinaries(newArr)\n        }\n        else {\n            newArr[id] = 0\n            setBinaries(newArr)\n        }\n        console.log(\"working\")\n    }\n\n    return (\n        <div className=\"btnbtn\">\n            <button className=\"btn\" onMouseDown={btnHandlre}>\n            {binaries[id]}</button>\n            \n        </div>\n    )\n}\n\nexport default Binary\n","import React,{useState} from 'react'\nimport Binary from \"./Binary\"\nimport \"./Converter.css\"\n\nfunction Converter({converter}) {\n    let btn = []\n    let setter = []\n    const [value, setValue] = useState(\"\")\n    const [binaries, setBinaries] = useState(setter)\n\n\n\n    for (var i = 0; i < 48; i++){\n        btn.push(i)\n        setter.push(0)\n    }\n\n    const resultHandlre = e => {\n        // e.preventDefault()\n        // setter = setter.map(function(){return 0})\n        // setBinaries(setter)\n        // console.log(setter)\n        // console.log(Binary(23))\n    }\n    return (\n        <div className=\"converter\" style={{visibility: converter ? \"visible\": \"hidden\"}}>\n            <div className=\"button_container\">\n            {\n                btn.map((item, i) => (\n                    <Binary key={item} id={i}\n                        binaries={binaries} setBinaries={setBinaries}\n                    />\n                ))\n                \n                }\n            </div>\n            <div className=\"marker\">\n                <h1>0</h1>\n                <h1>12</h1>\n                <h1>23</h1>\n                <h1>24</h1>\n                <h1>36</h1>\n                <h1>47</h1>\n            </div>\n            {/* <input type=\"number\" id=\"converterInput\"\n                autoComplete=\"off\"\n                value={value}\n                onChange={(e) => setValue(e.target.value)\n                }\n            /> */}\n            <div id=\"result\" className=\"result\"\n            onClick={resultHandlre}\n            >{parseInt((binaries.join(\"\").split(\"\").reverse().join(\"\")), 2)}</div>\n        </div>\n    )\n}\n\nexport default Converter\n","import React, {useState,useEffect} from 'react'\n\nimport './App.css';\nimport Basic from './components/Basic';\nimport Converter from './components/Converter';\n\nfunction App() {\n  const [choosing, setChoosing] = useState(false)\n  const [basic, setBasic] = useState(() =>{\n    const localData1 = localStorage.getItem('basic');\n    return localData1 ? JSON.parse(localData1) : true;\n  });\n  const [advanced, setAdvanced] = useState(() =>{\n    const localData1 = localStorage.getItem('advanced');\n    return localData1 ? JSON.parse(localData1) : false;\n  });\n  // const [advanced, setAdvanced] = useState(false);\n  const [converter, setConverter] = useState(() =>{\n    const localData2 = localStorage.getItem('converter');\n    return localData2 ? JSON.parse(localData2) : false;\n  });\n\n\n  useEffect(() => {\n    localStorage.setItem('basic', JSON.stringify(basic))\n    localStorage.setItem('converter', JSON.stringify(converter))\n  }, [basic, converter])  \n\n\n  function basicMode(){\n    setBasic(true)\n    setAdvanced(false)\n    setConverter(false)\n    setChoosing(false)\n  }\n  function advancedMode() {\n    setBasic(false)\n    setAdvanced(true)\n    setConverter(false)\n    setChoosing(false)\n\n  }\n  function converterMode() {\n    setBasic(false)\n    setAdvanced(false) \n    setConverter(true)\n    setChoosing(false)\n\n  }\n  \n\n  return (\n    <div className=\"App\">\n      <div className=\"modes\" onMouseDown={() => setChoosing(true)}>\n        <h6 className=\"mode mc\">\n          {basic ? \"Basic Mode\" : converter ? \"Converter Mode\" : \"Advanced Mode\"\n          }\n          </h6>\n        {\n          choosing ?\n            <div className=\"choices\">\n              <h6 className=\"mode mc\" onClick={basicMode}>Basic Mode\n               <span className={basic ? \"circle\" : \"\"}>\n               </span>\n              </h6>\n              <h6 className=\"mode mc\" onClick={advancedMode}>Advanced Mode\n              <span className={advanced ? \"circle\" : \"\"}>\n                  \n              </span>\n              </h6>\n              <h6 className=\"mode mc\" onClick={converterMode}>Converter Mode\n              <span className={converter ? \"circle\" : \"\"}>\n              </span>\n              </h6>\n\n            </div> : \"\"\n        }\n        <div className=\"arrow mc\"></div>\n        </div>\n      <Basic basic={basic}/>\n      <Converter converter={converter}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}